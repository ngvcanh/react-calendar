import React from "react";
import { ScrollbarCallbackHandler, ScrollbarProps, ScrollbarRequestFrameCallback, ScrollbarValues } from "./types";
export default function useScrollbar(props: ScrollbarProps): {
    getScrollbarWidth: (cacheEnabled?: boolean) => number;
    getValues: () => ScrollbarValues;
    getThumbHorizontalWidth: () => number;
    getThumbVerticalHeight: () => number;
    getScrollLeftForOffset: (offset: number) => number;
    update: (callback?: ScrollbarCallbackHandler) => void;
    updateScrollbar: (callback?: ScrollbarCallbackHandler) => void;
    updateVerticalTrack: (values: ScrollbarValues) => void;
    updateHorizontalTrack: (values: ScrollbarValues) => void;
    updateHorizontalThumb: (values: ScrollbarValues) => void;
    updateVerticalThumb: (values: ScrollbarValues) => void;
    detectScrolling: () => void;
    handleScroll: (event: Event) => void;
    handleScrollStart: () => void;
    handleScrollStop: () => void;
    handleScrollStartAutoHide: () => false | void | undefined;
    handleScrollStopAutoHide: () => false | void | undefined;
    handleTrackMouseEnter: () => void;
    handleTrackMouseEnterAutoHide: () => false | void | undefined;
    handleTrackMouseLeave: () => void;
    handleTrackMouseLeaveAutoHide: () => false | void | undefined;
    handleHorizontalTrackMouseDown: (event: MouseEvent) => void;
    handleVerticalTrackMouseDown: (event: MouseEvent) => void;
    handleHorizontalThumbMouseDown: (event: MouseEvent) => void;
    handleVerticalThumbMouseDown: (event: MouseEvent) => void;
    handleDragStart: (event: MouseEvent) => void;
    showTracks: () => void;
    hideTracks: () => void;
    raf: (callback: ScrollbarRequestFrameCallback) => void;
    scrollbarRef: React.RefObject<HTMLDivElement>;
    viewRef: React.RefObject<HTMLDivElement>;
    horizontalTrackRef: React.RefObject<HTMLDivElement>;
    horizontalThumbRef: React.RefObject<HTMLDivElement>;
    verticalTrackRef: React.RefObject<HTMLDivElement>;
    verticalThumbRef: React.RefObject<HTMLDivElement>;
    scrollLeftRef: React.MutableRefObject<number>;
    scrollTopRef: React.MutableRefObject<number>;
};
